; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\dma.o --depend=stm32nes\dma.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -ID:\Keil_v5\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -ID:\Keil_v5\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=531 -D_RTE_ -DSTM32F429xx -D_RTE_ -DUSE_FULL_LL_DRIVER -DSTM32F429xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\dma.crf ../Src/dma.c]
                          THUMB

                          AREA ||i.LL_AHB1_GRP1_EnableClock||, CODE, READONLY, ALIGN=2

                  LL_AHB1_GRP1_EnableClock PROC
;;;426    */
;;;427    __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
000000  b508              PUSH     {r3,lr}
;;;428    {
;;;429      __IO uint32_t tmpreg;
;;;430      SET_BIT(RCC->AHB1ENR, Periphs);
000002  4905              LDR      r1,|L1.24|
000004  6809              LDR      r1,[r1,#0]
000006  4301              ORRS     r1,r1,r0
000008  4a03              LDR      r2,|L1.24|
00000a  6011              STR      r1,[r2,#0]
;;;431      /* Delay after an RCC peripheral clock enabling */
;;;432      tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
00000c  4611              MOV      r1,r2
00000e  6809              LDR      r1,[r1,#0]
000010  4001              ANDS     r1,r1,r0
000012  9100              STR      r1,[sp,#0]
;;;433      (void)tmpreg;
000014  bf00              NOP      
;;;434    }
000016  bd08              POP      {r3,pc}
;;;435    
                          ENDP

                  |L1.24|
                          DCD      0x40023830

                          AREA ||i.MX_DMA_Init||, CODE, READONLY, ALIGN=1

                  MX_DMA_Init PROC
;;;56       */
;;;57     void MX_DMA_Init(void) 
000000  b570              PUSH     {r4-r6,lr}
;;;58     {
;;;59       /* Init with LL driver */
;;;60       /* DMA controller clock enable */
;;;61       LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
000002  f44f1000          MOV      r0,#0x200000
000006  f7fffffe          BL       LL_AHB1_GRP1_EnableClock
;;;62       LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA2);
00000a  f44f0080          MOV      r0,#0x400000
00000e  f7fffffe          BL       LL_AHB1_GRP1_EnableClock
;;;63     
;;;64       /* DMA interrupt init */
;;;65       /* DMA1_Stream3_IRQn interrupt configuration */
;;;66       NVIC_SetPriority(DMA1_Stream3_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
000012  f7fffffe          BL       NVIC_GetPriorityGrouping
000016  4605              MOV      r5,r0
000018  2200              MOVS     r2,#0
00001a  4611              MOV      r1,r2
00001c  f7fffffe          BL       NVIC_EncodePriority
000020  4604              MOV      r4,r0
000022  4621              MOV      r1,r4
000024  200e              MOVS     r0,#0xe
000026  f7fffffe          BL       NVIC_SetPriority
;;;67       NVIC_EnableIRQ(DMA1_Stream3_IRQn);
00002a  200e              MOVS     r0,#0xe
00002c  f7fffffe          BL       NVIC_EnableIRQ
;;;68       /* DMA1_Stream4_IRQn interrupt configuration */
;;;69       NVIC_SetPriority(DMA1_Stream4_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
000030  f7fffffe          BL       NVIC_GetPriorityGrouping
000034  4605              MOV      r5,r0
000036  2200              MOVS     r2,#0
000038  4611              MOV      r1,r2
00003a  f7fffffe          BL       NVIC_EncodePriority
00003e  4604              MOV      r4,r0
000040  4621              MOV      r1,r4
000042  200f              MOVS     r0,#0xf
000044  f7fffffe          BL       NVIC_SetPriority
;;;70       NVIC_EnableIRQ(DMA1_Stream4_IRQn);
000048  200f              MOVS     r0,#0xf
00004a  f7fffffe          BL       NVIC_EnableIRQ
;;;71       /* DMA1_Stream5_IRQn interrupt configuration */
;;;72       NVIC_SetPriority(DMA1_Stream5_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
00004e  f7fffffe          BL       NVIC_GetPriorityGrouping
000052  4605              MOV      r5,r0
000054  2200              MOVS     r2,#0
000056  4611              MOV      r1,r2
000058  f7fffffe          BL       NVIC_EncodePriority
00005c  4604              MOV      r4,r0
00005e  4621              MOV      r1,r4
000060  2010              MOVS     r0,#0x10
000062  f7fffffe          BL       NVIC_SetPriority
;;;73       NVIC_EnableIRQ(DMA1_Stream5_IRQn);
000066  2010              MOVS     r0,#0x10
000068  f7fffffe          BL       NVIC_EnableIRQ
;;;74       /* DMA1_Stream6_IRQn interrupt configuration */
;;;75       NVIC_SetPriority(DMA1_Stream6_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
00006c  f7fffffe          BL       NVIC_GetPriorityGrouping
000070  4605              MOV      r5,r0
000072  2200              MOVS     r2,#0
000074  4611              MOV      r1,r2
000076  f7fffffe          BL       NVIC_EncodePriority
00007a  4604              MOV      r4,r0
00007c  4621              MOV      r1,r4
00007e  2011              MOVS     r0,#0x11
000080  f7fffffe          BL       NVIC_SetPriority
;;;76       NVIC_EnableIRQ(DMA1_Stream6_IRQn);
000084  2011              MOVS     r0,#0x11
000086  f7fffffe          BL       NVIC_EnableIRQ
;;;77       /* DMA2_Stream0_IRQn interrupt configuration */
;;;78       NVIC_SetPriority(DMA2_Stream0_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
00008a  f7fffffe          BL       NVIC_GetPriorityGrouping
00008e  4605              MOV      r5,r0
000090  2200              MOVS     r2,#0
000092  4611              MOV      r1,r2
000094  f7fffffe          BL       NVIC_EncodePriority
000098  4604              MOV      r4,r0
00009a  4621              MOV      r1,r4
00009c  2038              MOVS     r0,#0x38
00009e  f7fffffe          BL       NVIC_SetPriority
;;;79       NVIC_EnableIRQ(DMA2_Stream0_IRQn);
0000a2  2038              MOVS     r0,#0x38
0000a4  f7fffffe          BL       NVIC_EnableIRQ
;;;80       /* DMA2_Stream2_IRQn interrupt configuration */
;;;81       NVIC_SetPriority(DMA2_Stream2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
0000a8  f7fffffe          BL       NVIC_GetPriorityGrouping
0000ac  4605              MOV      r5,r0
0000ae  2200              MOVS     r2,#0
0000b0  4611              MOV      r1,r2
0000b2  f7fffffe          BL       NVIC_EncodePriority
0000b6  4604              MOV      r4,r0
0000b8  4621              MOV      r1,r4
0000ba  203a              MOVS     r0,#0x3a
0000bc  f7fffffe          BL       NVIC_SetPriority
;;;82       NVIC_EnableIRQ(DMA2_Stream2_IRQn);
0000c0  203a              MOVS     r0,#0x3a
0000c2  f7fffffe          BL       NVIC_EnableIRQ
;;;83       /* DMA2_Stream5_IRQn interrupt configuration */
;;;84       NVIC_SetPriority(DMA2_Stream5_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
0000c6  f7fffffe          BL       NVIC_GetPriorityGrouping
0000ca  4605              MOV      r5,r0
0000cc  2200              MOVS     r2,#0
0000ce  4611              MOV      r1,r2
0000d0  f7fffffe          BL       NVIC_EncodePriority
0000d4  4604              MOV      r4,r0
0000d6  4621              MOV      r1,r4
0000d8  2044              MOVS     r0,#0x44
0000da  f7fffffe          BL       NVIC_SetPriority
;;;85       NVIC_EnableIRQ(DMA2_Stream5_IRQn);
0000de  2044              MOVS     r0,#0x44
0000e0  f7fffffe          BL       NVIC_EnableIRQ
;;;86       /* DMA2_Stream6_IRQn interrupt configuration */
;;;87       HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
0000e4  2200              MOVS     r2,#0
0000e6  4611              MOV      r1,r2
0000e8  2045              MOVS     r0,#0x45
0000ea  f7fffffe          BL       HAL_NVIC_SetPriority
;;;88       HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
0000ee  2045              MOVS     r0,#0x45
0000f0  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;89       /* DMA2_Stream7_IRQn interrupt configuration */
;;;90       NVIC_SetPriority(DMA2_Stream7_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
0000f4  f7fffffe          BL       NVIC_GetPriorityGrouping
0000f8  4605              MOV      r5,r0
0000fa  2200              MOVS     r2,#0
0000fc  4611              MOV      r1,r2
0000fe  f7fffffe          BL       NVIC_EncodePriority
000102  4604              MOV      r4,r0
000104  4621              MOV      r1,r4
000106  2046              MOVS     r0,#0x46
000108  f7fffffe          BL       NVIC_SetPriority
;;;91       NVIC_EnableIRQ(DMA2_Stream7_IRQn);
00010c  2046              MOVS     r0,#0x46
00010e  f7fffffe          BL       NVIC_EnableIRQ
;;;92     
;;;93     }
000112  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP


                          AREA ||i.NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

                  NVIC_EnableIRQ PROC
;;;1625    */
;;;1626   __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
000000  f000021f          AND      r2,r0,#0x1f
;;;1627   {
;;;1628     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
000004  2101              MOVS     r1,#1
000006  4091              LSLS     r1,r1,r2
000008  0942              LSRS     r2,r0,#5
00000a  0092              LSLS     r2,r2,#2
00000c  f10222e0          ADD      r2,r2,#0xe000e000
000010  f8c21100          STR      r1,[r2,#0x100]
;;;1629   }
000014  4770              BX       lr
;;;1630   
                          ENDP


                          AREA ||i.NVIC_EncodePriority||, CODE, READONLY, ALIGN=1

                  NVIC_EncodePriority PROC
;;;1744    */
;;;1745   __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1746   {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;1747     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
000006  f0030107          AND      r1,r3,#7
;;;1748     uint32_t PreemptPriorityBits;
;;;1749     uint32_t SubPriorityBits;
;;;1750   
;;;1751     PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
00000a  f1c10007          RSB      r0,r1,#7
00000e  2804              CMP      r0,#4
000010  d901              BLS      |L4.22|
000012  2004              MOVS     r0,#4
000014  e001              B        |L4.26|
                  |L4.22|
000016  f1c10007          RSB      r0,r1,#7
                  |L4.26|
00001a  4606              MOV      r6,r0
;;;1752     SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
00001c  1d08              ADDS     r0,r1,#4
00001e  2807              CMP      r0,#7
000020  d201              BCS      |L4.38|
000022  2000              MOVS     r0,#0
000024  e000              B        |L4.40|
                  |L4.38|
000026  1ec8              SUBS     r0,r1,#3
                  |L4.40|
000028  4605              MOV      r5,r0
;;;1753   
;;;1754     return (
00002a  2001              MOVS     r0,#1
00002c  40b0              LSLS     r0,r0,r6
00002e  1e40              SUBS     r0,r0,#1
000030  4020              ANDS     r0,r0,r4
000032  40a8              LSLS     r0,r0,r5
000034  2701              MOVS     r7,#1
000036  40af              LSLS     r7,r7,r5
000038  1e7f              SUBS     r7,r7,#1
00003a  4017              ANDS     r7,r7,r2
00003c  4338              ORRS     r0,r0,r7
;;;1755              ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
;;;1756              ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
;;;1757            );
;;;1758   }
00003e  bdf0              POP      {r4-r7,pc}
;;;1759   
                          ENDP


                          AREA ||i.NVIC_GetPriorityGrouping||, CODE, READONLY, ALIGN=2

                  NVIC_GetPriorityGrouping PROC
;;;1614    */
;;;1615   __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
000000  4802              LDR      r0,|L5.12|
;;;1616   {
;;;1617     return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
000002  6800              LDR      r0,[r0,#0]
000004  f3c02002          UBFX     r0,r0,#8,#3
;;;1618   }
000008  4770              BX       lr
;;;1619   
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      0xe000ed0c

                          AREA ||i.NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  NVIC_SetPriority PROC
;;;1697    */
;;;1698   __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;1699   {
;;;1700     if ((int32_t)(IRQn) < 0)
000002  2800              CMP      r0,#0
000004  da07              BGE      |L6.22|
;;;1701     {
;;;1702       SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
000006  070a              LSLS     r2,r1,#28
000008  0e14              LSRS     r4,r2,#24
00000a  4a05              LDR      r2,|L6.32|
00000c  f000030f          AND      r3,r0,#0xf
000010  1f1b              SUBS     r3,r3,#4
000012  54d4              STRB     r4,[r2,r3]
000014  e003              B        |L6.30|
                  |L6.22|
;;;1703     }
;;;1704     else
;;;1705     {
;;;1706       NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
000016  070a              LSLS     r2,r1,#28
000018  0e13              LSRS     r3,r2,#24
00001a  4a02              LDR      r2,|L6.36|
00001c  5413              STRB     r3,[r2,r0]
                  |L6.30|
;;;1707     }
;;;1708   }
00001e  bd10              POP      {r4,pc}
;;;1709   
                          ENDP

                  |L6.32|
                          DCD      0xe000ed18
                  |L6.36|
                          DCD      0xe000e400

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  STREAM_OFFSET_TAB
000000  10284058          DCB      0x10,0x28,0x40,0x58
000004  7088a0b8          DCB      0x70,0x88,0xa0,0xb8
                  aRCC_PLLSAIDIVRPrescTable
000008  02040810          DCB      0x02,0x04,0x08,0x10
                  OFFSET_TAB_CCMRx
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  040404            DCB      0x04,0x04,0x04
                  SHIFT_TAB_OCxx
000013  00                DCB      0x00
000014  00080000          DCB      0x00,0x08,0x00,0x00
000018  0008              DCB      0x00,0x08
                  SHIFT_TAB_ICxx
00001a  0000              DCB      0x00,0x00
00001c  08000000          DCB      0x08,0x00,0x00,0x00
000020  08                DCB      0x08
                  SHIFT_TAB_CCxP
000021  000204            DCB      0x00,0x02,0x04
000024  06080a0c          DCB      0x06,0x08,0x0a,0x0c
                  SHIFT_TAB_OISx
000028  00010203          DCB      0x00,0x01,0x02,0x03
00002c  040506            DCB      0x04,0x05,0x06

;*** Start embedded assembler ***

#line 1 "../Src/dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_c03d6034____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_dma_c_c03d6034____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_c03d6034____REVSH|
#line 402
|__asm___5_dma_c_c03d6034____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_c03d6034____RRX|
#line 587
|__asm___5_dma_c_c03d6034____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
