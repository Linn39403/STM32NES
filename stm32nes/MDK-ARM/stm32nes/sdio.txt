; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\sdio.o --depend=stm32nes\sdio.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -ID:\Keil_v5\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -ID:\Keil_v5\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=531 -D_RTE_ -DSTM32F429xx -D_RTE_ -DUSE_FULL_LL_DRIVER -DSTM32F429xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\sdio.crf ../Src/sdio.c]
                          THUMB

                          AREA ||i.HAL_SD_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SD_MspDeInit PROC
;;;142    
;;;143    void HAL_SD_MspDeInit(SD_HandleTypeDef* sdHandle)
000000  b510              PUSH     {r4,lr}
;;;144    {
000002  4604              MOV      r4,r0
;;;145    
;;;146      if(sdHandle->Instance==SDIO)
000004  490c              LDR      r1,|L1.56|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d114              BNE      |L1.54|
;;;147      {
;;;148      /* USER CODE BEGIN SDIO_MspDeInit 0 */
;;;149    
;;;150      /* USER CODE END SDIO_MspDeInit 0 */
;;;151        /* Peripheral clock disable */
;;;152        __HAL_RCC_SDIO_CLK_DISABLE();
00000c  480b              LDR      r0,|L1.60|
00000e  6800              LDR      r0,[r0,#0]
000010  f4206000          BIC      r0,r0,#0x800
000014  4909              LDR      r1,|L1.60|
000016  6008              STR      r0,[r1,#0]
;;;153      
;;;154        /**SDIO GPIO Configuration    
;;;155        PC8     ------> SDIO_D0
;;;156        PC9     ------> SDIO_D1
;;;157        PC10     ------> SDIO_D2
;;;158        PC11     ------> SDIO_D3
;;;159        PC12     ------> SDIO_CK
;;;160        PD2     ------> SDIO_CMD 
;;;161        */
;;;162        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
000018  f44f51f8          MOV      r1,#0x1f00
00001c  4808              LDR      r0,|L1.64|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;163                              |GPIO_PIN_12);
;;;164    
;;;165        HAL_GPIO_DeInit(GPIOD, GPIO_PIN_2);
000022  2104              MOVS     r1,#4
000024  4807              LDR      r0,|L1.68|
000026  f7fffffe          BL       HAL_GPIO_DeInit
;;;166    
;;;167        /* SDIO DMA DeInit */
;;;168        HAL_DMA_DeInit(sdHandle->hdmarx);
00002a  6be0              LDR      r0,[r4,#0x3c]
00002c  f7fffffe          BL       HAL_DMA_DeInit
;;;169        HAL_DMA_DeInit(sdHandle->hdmatx);
000030  6c20              LDR      r0,[r4,#0x40]
000032  f7fffffe          BL       HAL_DMA_DeInit
                  |L1.54|
;;;170      /* USER CODE BEGIN SDIO_MspDeInit 1 */
;;;171    
;;;172      /* USER CODE END SDIO_MspDeInit 1 */
;;;173      }
;;;174    } 
000036  bd10              POP      {r4,pc}
;;;175    
                          ENDP

                  |L1.56|
                          DCD      0x40012c00
                  |L1.60|
                          DCD      0x40023844
                  |L1.64|
                          DCD      0x40020800
                  |L1.68|
                          DCD      0x40020c00

                          AREA ||i.HAL_SD_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SD_MspInit PROC
;;;72     
;;;73     void HAL_SD_MspInit(SD_HandleTypeDef* sdHandle)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;75     
;;;76       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;77       if(sdHandle->Instance==SDIO)
00000e  4940              LDR      r1,|L2.272|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d179              BNE      |L2.266|
;;;78       {
;;;79       /* USER CODE BEGIN SDIO_MspInit 0 */
;;;80     
;;;81       /* USER CODE END SDIO_MspInit 0 */
;;;82         /* SDIO clock enable */
;;;83         __HAL_RCC_SDIO_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  483d              LDR      r0,|L2.276|
00001e  6800              LDR      r0,[r0,#0]
000020  f4406000          ORR      r0,r0,#0x800
000024  493b              LDR      r1,|L2.276|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f4006000          AND      r0,r0,#0x800
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;84       
;;;85         __HAL_RCC_GPIOC_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4835              LDR      r0,|L2.276|
00003e  3814              SUBS     r0,r0,#0x14
000040  6800              LDR      r0,[r0,#0]
000042  f0400004          ORR      r0,r0,#4
000046  4933              LDR      r1,|L2.276|
000048  3914              SUBS     r1,r1,#0x14
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000004          AND      r0,r0,#4
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;86         __HAL_RCC_GPIOD_CLK_ENABLE();
00005a  bf00              NOP      
00005c  2000              MOVS     r0,#0
00005e  9000              STR      r0,[sp,#0]
000060  4608              MOV      r0,r1
000062  6800              LDR      r0,[r0,#0]
000064  f0400008          ORR      r0,r0,#8
000068  6008              STR      r0,[r1,#0]
00006a  4608              MOV      r0,r1
00006c  6800              LDR      r0,[r0,#0]
00006e  f0000008          AND      r0,r0,#8
000072  9000              STR      r0,[sp,#0]
000074  bf00              NOP      
000076  bf00              NOP      
;;;87         /**SDIO GPIO Configuration    
;;;88         PC8     ------> SDIO_D0
;;;89         PC9     ------> SDIO_D1
;;;90         PC10     ------> SDIO_D2
;;;91         PC11     ------> SDIO_D3
;;;92         PC12     ------> SDIO_CK
;;;93         PD2     ------> SDIO_CMD 
;;;94         */
;;;95         GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
000078  f44f50f8          MOV      r0,#0x1f00
00007c  9001              STR      r0,[sp,#4]
;;;96                               |GPIO_PIN_12;
;;;97         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00007e  2002              MOVS     r0,#2
000080  9002              STR      r0,[sp,#8]
;;;98         GPIO_InitStruct.Pull = GPIO_NOPULL;
000082  2000              MOVS     r0,#0
000084  9003              STR      r0,[sp,#0xc]
;;;99         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000086  2003              MOVS     r0,#3
000088  9004              STR      r0,[sp,#0x10]
;;;100        GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
00008a  200c              MOVS     r0,#0xc
00008c  9005              STR      r0,[sp,#0x14]
;;;101        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
00008e  a901              ADD      r1,sp,#4
000090  4821              LDR      r0,|L2.280|
000092  f7fffffe          BL       HAL_GPIO_Init
;;;102    
;;;103        GPIO_InitStruct.Pin = GPIO_PIN_2;
000096  2004              MOVS     r0,#4
000098  9001              STR      r0,[sp,#4]
;;;104        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00009a  2002              MOVS     r0,#2
00009c  9002              STR      r0,[sp,#8]
;;;105        GPIO_InitStruct.Pull = GPIO_NOPULL;
00009e  2000              MOVS     r0,#0
0000a0  9003              STR      r0,[sp,#0xc]
;;;106        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
0000a2  2003              MOVS     r0,#3
0000a4  9004              STR      r0,[sp,#0x10]
;;;107        GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
0000a6  200c              MOVS     r0,#0xc
0000a8  9005              STR      r0,[sp,#0x14]
;;;108        HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
0000aa  a901              ADD      r1,sp,#4
0000ac  481b              LDR      r0,|L2.284|
0000ae  f7fffffe          BL       HAL_GPIO_Init
;;;109    
;;;110        /* SDIO DMA Init */
;;;111        /* SDIO Init */
;;;112        hdma_sdio.Instance = DMA2_Stream6;
0000b2  481b              LDR      r0,|L2.288|
0000b4  491b              LDR      r1,|L2.292|
0000b6  6008              STR      r0,[r1,#0]  ; hdma_sdio
;;;113        hdma_sdio.Init.Channel = DMA_CHANNEL_4;
0000b8  f04f6000          MOV      r0,#0x8000000
0000bc  6048              STR      r0,[r1,#4]  ; hdma_sdio
;;;114        hdma_sdio.Init.Direction = DMA_PERIPH_TO_MEMORY;
0000be  2100              MOVS     r1,#0
0000c0  4818              LDR      r0,|L2.292|
0000c2  6081              STR      r1,[r0,#8]
;;;115        hdma_sdio.Init.PeriphInc = DMA_PINC_DISABLE;
0000c4  60c1              STR      r1,[r0,#0xc]
;;;116        hdma_sdio.Init.MemInc = DMA_MINC_ENABLE;
0000c6  f44f6180          MOV      r1,#0x400
0000ca  6101              STR      r1,[r0,#0x10]
;;;117        hdma_sdio.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
0000cc  0089              LSLS     r1,r1,#2
0000ce  6141              STR      r1,[r0,#0x14]
;;;118        hdma_sdio.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
0000d0  0089              LSLS     r1,r1,#2
0000d2  6181              STR      r1,[r0,#0x18]
;;;119        hdma_sdio.Init.Mode = DMA_PFCTRL;
0000d4  2120              MOVS     r1,#0x20
0000d6  61c1              STR      r1,[r0,#0x1c]
;;;120        hdma_sdio.Init.Priority = DMA_PRIORITY_HIGH;
0000d8  0309              LSLS     r1,r1,#12
0000da  6201              STR      r1,[r0,#0x20]
;;;121        hdma_sdio.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
0000dc  2104              MOVS     r1,#4
0000de  6241              STR      r1,[r0,#0x24]
;;;122        hdma_sdio.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
0000e0  2103              MOVS     r1,#3
0000e2  6281              STR      r1,[r0,#0x28]
;;;123        hdma_sdio.Init.MemBurst = DMA_MBURST_INC4;
0000e4  f44f0100          MOV      r1,#0x800000
0000e8  62c1              STR      r1,[r0,#0x2c]
;;;124        hdma_sdio.Init.PeriphBurst = DMA_PBURST_INC4;
0000ea  1089              ASRS     r1,r1,#2
0000ec  6301              STR      r1,[r0,#0x30]
;;;125        if (HAL_DMA_Init(&hdma_sdio) != HAL_OK)
0000ee  f7fffffe          BL       HAL_DMA_Init
0000f2  b108              CBZ      r0,|L2.248|
;;;126        {
;;;127          Error_Handler();
0000f4  f7fffffe          BL       Error_Handler
                  |L2.248|
;;;128        }
;;;129    
;;;130        /* Several peripheral DMA handle pointers point to the same DMA handle.
;;;131         Be aware that there is only one stream to perform all the requested DMAs. */
;;;132        /* Be sure to change transfer direction before calling
;;;133         HAL_SD_ReadBlocks_DMA or HAL_SD_WriteBlocks_DMA. */
;;;134        __HAL_LINKDMA(sdHandle,hdmarx,hdma_sdio);
0000f8  bf00              NOP      
0000fa  480a              LDR      r0,|L2.292|
0000fc  63e0              STR      r0,[r4,#0x3c]
0000fe  6384              STR      r4,[r0,#0x38]  ; hdma_sdio
000100  bf00              NOP      
;;;135        __HAL_LINKDMA(sdHandle,hdmatx,hdma_sdio);
000102  bf00              NOP      
000104  6420              STR      r0,[r4,#0x40]
000106  6384              STR      r4,[r0,#0x38]  ; hdma_sdio
000108  bf00              NOP      
                  |L2.266|
;;;136    
;;;137      /* USER CODE BEGIN SDIO_MspInit 1 */
;;;138    
;;;139      /* USER CODE END SDIO_MspInit 1 */
;;;140      }
;;;141    }
00010a  b006              ADD      sp,sp,#0x18
00010c  bd10              POP      {r4,pc}
;;;142    
                          ENDP

00010e  0000              DCW      0x0000
                  |L2.272|
                          DCD      0x40012c00
                  |L2.276|
                          DCD      0x40023844
                  |L2.280|
                          DCD      0x40020800
                  |L2.284|
                          DCD      0x40020c00
                  |L2.288|
                          DCD      0x400264a0
                  |L2.292|
                          DCD      hdma_sdio

                          AREA ||i.MX_SDIO_SD_Init||, CODE, READONLY, ALIGN=2

                  MX_SDIO_SD_Init PROC
;;;51     
;;;52     void MX_SDIO_SD_Init(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54     
;;;55       hsd.Instance = SDIO;
000002  480d              LDR      r0,|L3.56|
000004  490d              LDR      r1,|L3.60|
000006  6008              STR      r0,[r1,#0]  ; hsd
;;;56       hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
000008  2000              MOVS     r0,#0
00000a  6048              STR      r0,[r1,#4]  ; hsd
;;;57       hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
00000c  2100              MOVS     r1,#0
00000e  480b              LDR      r0,|L3.60|
000010  6081              STR      r1,[r0,#8]
;;;58       hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
000012  60c1              STR      r1,[r0,#0xc]
;;;59       hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
000014  6101              STR      r1,[r0,#0x10]
;;;60       hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
000016  6141              STR      r1,[r0,#0x14]
;;;61       hsd.Init.ClockDiv = 0;
000018  6181              STR      r1,[r0,#0x18]
;;;62       if (HAL_SD_Init(&hsd) != HAL_OK)
00001a  f7fffffe          BL       HAL_SD_Init
00001e  b108              CBZ      r0,|L3.36|
;;;63       {
;;;64         Error_Handler();
000020  f7fffffe          BL       Error_Handler
                  |L3.36|
;;;65       }
;;;66       if (HAL_SD_ConfigWideBusOperation(&hsd, SDIO_BUS_WIDE_4B) != HAL_OK)
000024  f44f6100          MOV      r1,#0x800
000028  4804              LDR      r0,|L3.60|
00002a  f7fffffe          BL       HAL_SD_ConfigWideBusOperation
00002e  b108              CBZ      r0,|L3.52|
;;;67       {
;;;68         Error_Handler();
000030  f7fffffe          BL       Error_Handler
                  |L3.52|
;;;69       }
;;;70     
;;;71     }
000034  bd10              POP      {r4,pc}
;;;72     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x40012c00
                  |L3.60|
                          DCD      hsd

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hsd
                          %        132
                  hdma_sdio
                          %        96

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  STREAM_OFFSET_TAB
000000  10284058          DCB      0x10,0x28,0x40,0x58
000004  7088a0b8          DCB      0x70,0x88,0xa0,0xb8
                  aRCC_PLLSAIDIVRPrescTable
000008  02040810          DCB      0x02,0x04,0x08,0x10
                  OFFSET_TAB_CCMRx
00000c  00000000          DCB      0x00,0x00,0x00,0x00
000010  040404            DCB      0x04,0x04,0x04
                  SHIFT_TAB_OCxx
000013  00                DCB      0x00
000014  00080000          DCB      0x00,0x08,0x00,0x00
000018  0008              DCB      0x00,0x08
                  SHIFT_TAB_ICxx
00001a  0000              DCB      0x00,0x00
00001c  08000000          DCB      0x08,0x00,0x00,0x00
000020  08                DCB      0x08
                  SHIFT_TAB_CCxP
000021  000204            DCB      0x00,0x02,0x04
000024  06080a0c          DCB      0x06,0x08,0x0a,0x0c
                  SHIFT_TAB_OISx
000028  00010203          DCB      0x00,0x01,0x02,0x03
00002c  040506            DCB      0x04,0x05,0x06

;*** Start embedded assembler ***

#line 1 "../Src/sdio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___6_sdio_c_62cda922____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____REVSH|
#line 402
|__asm___6_sdio_c_62cda922____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_sdio_c_62cda922____RRX|
#line 587
|__asm___6_sdio_c_62cda922____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
