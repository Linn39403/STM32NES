; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ostm32nes\stm32f4xx_ll_gpio.o --depend=stm32nes\stm32f4xx_ll_gpio.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I../Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I.\RTE\_stm32nes -ID:\Keil_v5\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -ID:\Keil_v5\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=531 -D_RTE_ -DSTM32F429xx -D_RTE_ -DUSE_FULL_LL_DRIVER -DSTM32F429xx -DUSE_HAL_DRIVER --omf_browse=stm32nes\stm32f4xx_ll_gpio.crf ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_gpio.c]
                          THUMB

                          AREA ||i.LL_GPIO_DeInit||, CODE, READONLY, ALIGN=2

                  LL_GPIO_DeInit PROC
;;;119      */
;;;120    ErrorStatus LL_GPIO_DeInit(GPIO_TypeDef *GPIOx)
000000  2201              MOVS     r2,#1
000002  494b              LDR      r1,|L1.304|
;;;121    {
;;;122      ErrorStatus status = SUCCESS;
;;;123    
;;;124      /* Check the parameters */
;;;125      assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
;;;126    
;;;127      /* Force and Release reset on clock of GPIOx Port */
;;;128      if (GPIOx == GPIOA)
000004  f1a04380          SUB      r3,r0,#0x40000000
000008  f5b33300          SUBS     r3,r3,#0x20000
00000c  d034              BEQ      |L1.120|
;;;129      {
;;;130        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOA);
;;;131        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOA);
;;;132      }
;;;133      else if (GPIOx == GPIOB)
00000e  f1a04380          SUB      r3,r0,#0x40000000
000012  f5b33301          SUBS     r3,r3,#0x20400
000016  d038              BEQ      |L1.138|
;;;134      {
;;;135        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOB);
;;;136        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOB);
;;;137      }
;;;138      else if (GPIOx == GPIOC)
000018  f1a04380          SUB      r3,r0,#0x40000000
00001c  f5b33302          SUBS     r3,r3,#0x20800
000020  d03b              BEQ      |L1.154|
;;;139      {
;;;140        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOC);
;;;141        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOC);
;;;142      }
;;;143    #if defined(GPIOD)
;;;144      else if (GPIOx == GPIOD)
000022  f1a04380          SUB      r3,r0,#0x40000000
000026  f5b33303          SUBS     r3,r3,#0x20c00
00002a  d040              BEQ      |L1.174|
;;;145      {
;;;146        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOD);
;;;147        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOD);
;;;148      }
;;;149    #endif /* GPIOD */
;;;150    #if defined(GPIOE)
;;;151      else if (GPIOx == GPIOE)
00002c  f1a04380          SUB      r3,r0,#0x40000000
000030  f5b33304          SUBS     r3,r3,#0x21000
000034  d043              BEQ      |L1.190|
;;;152      {
;;;153        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOE);
;;;154        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOE);
;;;155      }
;;;156    #endif /* GPIOE */
;;;157    #if defined(GPIOF)
;;;158      else if (GPIOx == GPIOF)
000036  f1a04380          SUB      r3,r0,#0x40000000
00003a  f5b33305          SUBS     r3,r3,#0x21400
00003e  d046              BEQ      |L1.206|
;;;159      {
;;;160        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOF);
;;;161        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOF);
;;;162      }
;;;163    #endif /* GPIOF */
;;;164    #if defined(GPIOG)
;;;165      else if (GPIOx == GPIOG)
000040  f1a04380          SUB      r3,r0,#0x40000000
000044  f5b33306          SUBS     r3,r3,#0x21800
000048  d049              BEQ      |L1.222|
;;;166      {
;;;167        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOG);
;;;168        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOG);
;;;169      }
;;;170    #endif /* GPIOG */
;;;171    #if defined(GPIOH)
;;;172      else if (GPIOx == GPIOH)
00004a  f1a04380          SUB      r3,r0,#0x40000000
00004e  f5b33307          SUBS     r3,r3,#0x21c00
000052  d04c              BEQ      |L1.238|
;;;173      {
;;;174        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOH);
;;;175        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOH);
;;;176      }
;;;177    #endif /* GPIOH */
;;;178    #if defined(GPIOI)
;;;179      else if (GPIOx == GPIOI)
000054  f1a04380          SUB      r3,r0,#0x40000000
000058  f5b33308          SUBS     r3,r3,#0x22000
00005c  d04f              BEQ      |L1.254|
;;;180      {
;;;181        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOI);
;;;182        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOI);
;;;183      }
;;;184    #endif /* GPIOI */
;;;185    #if defined(GPIOJ)
;;;186      else if (GPIOx == GPIOJ)
00005e  f1a04380          SUB      r3,r0,#0x40000000
000062  f5b33309          SUBS     r3,r3,#0x22400
000066  d052              BEQ      |L1.270|
;;;187      {
;;;188        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOJ);
;;;189        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOJ);
;;;190      }
;;;191    #endif /* GPIOJ */
;;;192    #if defined(GPIOK)
;;;193      else if (GPIOx == GPIOK)
000068  f1a04380          SUB      r3,r0,#0x40000000
00006c  f5b3330a          SUBS     r3,r3,#0x22800
;;;194      {
;;;195        LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_GPIOK);
;;;196        LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_GPIOK);
;;;197      }
;;;198    #endif /* GPIOK */
;;;199      else
;;;200      {
;;;201        status = ERROR;
000070  bf18              IT       NE
000072  2200              MOVNE    r2,#0
000074  d053              BEQ      |L1.286|
000076  e018              B        |L1.170|
                  |L1.120|
000078  6808              LDR      r0,[r1,#0]            ;193
00007a  f0400001          ORR      r0,r0,#1              ;193
00007e  6008              STR      r0,[r1,#0]            ;193
000080  6808              LDR      r0,[r1,#0]            ;193
000082  f0200001          BIC      r0,r0,#1              ;193
000086  6008              STR      r0,[r1,#0]            ;193
000088  e00f              B        |L1.170|
                  |L1.138|
00008a  6808              LDR      r0,[r1,#0]            ;131
00008c  f0400002          ORR      r0,r0,#2              ;131
000090  6008              STR      r0,[r1,#0]            ;131
000092  6808              LDR      r0,[r1,#0]            ;131
000094  f0200002          BIC      r0,r0,#2              ;131
000098  e006              B        |L1.168|
                  |L1.154|
00009a  6808              LDR      r0,[r1,#0]            ;136
00009c  f0400004          ORR      r0,r0,#4              ;136
0000a0  6008              STR      r0,[r1,#0]            ;136
0000a2  6808              LDR      r0,[r1,#0]            ;136
0000a4  f0200004          BIC      r0,r0,#4              ;136
                  |L1.168|
0000a8  6008              STR      r0,[r1,#0]            ;136
                  |L1.170|
;;;202      }
;;;203    
;;;204      return (status);
0000aa  4610              MOV      r0,r2
;;;205    }
0000ac  4770              BX       lr
                  |L1.174|
0000ae  6808              LDR      r0,[r1,#0]
0000b0  f0400008          ORR      r0,r0,#8
0000b4  6008              STR      r0,[r1,#0]
0000b6  6808              LDR      r0,[r1,#0]
0000b8  f0200008          BIC      r0,r0,#8
0000bc  e7f4              B        |L1.168|
                  |L1.190|
0000be  6808              LDR      r0,[r1,#0]            ;147
0000c0  f0400010          ORR      r0,r0,#0x10           ;147
0000c4  6008              STR      r0,[r1,#0]            ;147
0000c6  6808              LDR      r0,[r1,#0]            ;147
0000c8  f0200010          BIC      r0,r0,#0x10           ;147
0000cc  e7ec              B        |L1.168|
                  |L1.206|
0000ce  6808              LDR      r0,[r1,#0]            ;154
0000d0  f0400020          ORR      r0,r0,#0x20           ;154
0000d4  6008              STR      r0,[r1,#0]            ;154
0000d6  6808              LDR      r0,[r1,#0]            ;154
0000d8  f0200020          BIC      r0,r0,#0x20           ;154
0000dc  e7e4              B        |L1.168|
                  |L1.222|
0000de  6808              LDR      r0,[r1,#0]            ;161
0000e0  f0400040          ORR      r0,r0,#0x40           ;161
0000e4  6008              STR      r0,[r1,#0]            ;161
0000e6  6808              LDR      r0,[r1,#0]            ;161
0000e8  f0200040          BIC      r0,r0,#0x40           ;161
0000ec  e7dc              B        |L1.168|
                  |L1.238|
0000ee  6808              LDR      r0,[r1,#0]            ;168
0000f0  f0400080          ORR      r0,r0,#0x80           ;168
0000f4  6008              STR      r0,[r1,#0]            ;168
0000f6  6808              LDR      r0,[r1,#0]            ;168
0000f8  f0200080          BIC      r0,r0,#0x80           ;168
0000fc  e7d4              B        |L1.168|
                  |L1.254|
0000fe  6808              LDR      r0,[r1,#0]            ;175
000100  f4407080          ORR      r0,r0,#0x100          ;175
000104  6008              STR      r0,[r1,#0]            ;175
000106  6808              LDR      r0,[r1,#0]            ;175
000108  f4207080          BIC      r0,r0,#0x100          ;175
00010c  e7cc              B        |L1.168|
                  |L1.270|
00010e  6808              LDR      r0,[r1,#0]            ;182
000110  f4407000          ORR      r0,r0,#0x200          ;182
000114  6008              STR      r0,[r1,#0]            ;182
000116  6808              LDR      r0,[r1,#0]            ;182
000118  f4207000          BIC      r0,r0,#0x200          ;182
00011c  e7c4              B        |L1.168|
                  |L1.286|
00011e  6808              LDR      r0,[r1,#0]            ;189
000120  f4406080          ORR      r0,r0,#0x400          ;189
000124  6008              STR      r0,[r1,#0]            ;189
000126  6808              LDR      r0,[r1,#0]            ;189
000128  f4206080          BIC      r0,r0,#0x400          ;189
00012c  e7bc              B        |L1.168|
;;;206    
                          ENDP

00012e  0000              DCW      0x0000
                  |L1.304|
                          DCD      0x40023810

                          AREA ||i.LL_GPIO_Init||, CODE, READONLY, ALIGN=2

                  LL_GPIO_Init PROC
;;;215      */
;;;216    ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
000000  e92d01f0          PUSH     {r4-r8}
;;;217    {
;;;218      uint32_t pinpos     = 0x00000000U;
;;;219      uint32_t currentpin = 0x00000000U;
;;;220    
;;;221      /* Check the parameters */
;;;222      assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
;;;223      assert_param(IS_LL_GPIO_PIN(GPIO_InitStruct->Pin));
;;;224      assert_param(IS_LL_GPIO_MODE(GPIO_InitStruct->Mode));
;;;225      assert_param(IS_LL_GPIO_PULL(GPIO_InitStruct->Pull));
;;;226    
;;;227      /* ------------------------- Configure the port pins ---------------- */
;;;228      /* Initialize  pinpos on first pin set */
;;;229      pinpos = POSITION_VAL(GPIO_InitStruct->Pin);
000004  680a              LDR      r2,[r1,#0]
000006  fa92f3a2          RBIT     r3,r2
00000a  fab3f383          CLZ      r3,r3
;;;230    
;;;231      /* Configure the port pins */
;;;232      while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00000000U)
00000e  40da              LSRS     r2,r2,r3
000010  d071              BEQ      |L2.246|
;;;233      {
;;;234        /* Get current io position */
;;;235        currentpin = (GPIO_InitStruct->Pin) & (0x00000001U << pinpos);
000012  2501              MOVS     r5,#1
000014  f04f0c03          MOV      r12,#3
000018  f05f040f          MOVS.W   r4,#0xf
                  |L2.28|
00001c  680a              LDR      r2,[r1,#0]
00001e  fa05f603          LSL      r6,r5,r3
000022  4032              ANDS     r2,r2,r6
;;;236    
;;;237        if (currentpin)
000024  d07d              BEQ      |L2.290|
000026  684e              LDR      r6,[r1,#4]
000028  6807              LDR      r7,[r0,#0]
00002a  fa92f8a2          RBIT     r8,r2
00002e  fab8f888          CLZ      r8,r8
000032  ea4f0848          LSL      r8,r8,#1
000036  fa0cf808          LSL      r8,r12,r8
00003a  ea270708          BIC      r7,r7,r8
00003e  fa92f8a2          RBIT     r8,r2
000042  fab8f888          CLZ      r8,r8
000046  ea4f0848          LSL      r8,r8,#1
00004a  fa06f608          LSL      r6,r6,r8
00004e  433e              ORRS     r6,r6,r7
000050  6006              STR      r6,[r0,#0]
;;;238        {
;;;239          /* Pin Mode configuration */
;;;240          LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
;;;241    
;;;242          if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
000052  684e              LDR      r6,[r1,#4]
000054  2e01              CMP      r6,#1
000056  bf18              IT       NE
000058  2e02              CMPNE    r6,#2
00005a  d116              BNE      |L2.138|
00005c  688e              LDR      r6,[r1,#8]
00005e  6887              LDR      r7,[r0,#8]
000060  fa92f8a2          RBIT     r8,r2
000064  fab8f888          CLZ      r8,r8
000068  ea4f0848          LSL      r8,r8,#1
00006c  fa0cf808          LSL      r8,r12,r8
000070  ea270708          BIC      r7,r7,r8
000074  fa92f8a2          RBIT     r8,r2
000078  fab8f888          CLZ      r8,r8
00007c  ea4f0848          LSL      r8,r8,#1
000080  fa06f608          LSL      r6,r6,r8
000084  ea470606          ORR      r6,r7,r6
000088  6086              STR      r6,[r0,#8]
                  |L2.138|
00008a  690e              LDR      r6,[r1,#0x10]
00008c  68c7              LDR      r7,[r0,#0xc]
00008e  fa92f8a2          RBIT     r8,r2
000092  fab8f888          CLZ      r8,r8
000096  ea4f0848          LSL      r8,r8,#1
00009a  fa0cf808          LSL      r8,r12,r8
00009e  ea270708          BIC      r7,r7,r8
0000a2  fa92f8a2          RBIT     r8,r2
0000a6  fab8f888          CLZ      r8,r8
0000aa  ea4f0848          LSL      r8,r8,#1
0000ae  fa06f608          LSL      r6,r6,r8
0000b2  ea470606          ORR      r6,r7,r6
0000b6  60c6              STR      r6,[r0,#0xc]
;;;243          {
;;;244            /* Check Speed mode parameters */
;;;245            assert_param(IS_LL_GPIO_SPEED(GPIO_InitStruct->Speed));
;;;246    
;;;247            /* Speed mode configuration */
;;;248            LL_GPIO_SetPinSpeed(GPIOx, currentpin, GPIO_InitStruct->Speed);
;;;249          }
;;;250    
;;;251          /* Pull-up Pull down resistor configuration*/
;;;252          LL_GPIO_SetPinPull(GPIOx, currentpin, GPIO_InitStruct->Pull);
;;;253    
;;;254          if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
0000b8  684e              LDR      r6,[r1,#4]
0000ba  2e02              CMP      r6,#2
0000bc  d131              BNE      |L2.290|
;;;255          {
;;;256            /* Check Alternate parameter */
;;;257            assert_param(IS_LL_GPIO_ALTERNATE(GPIO_InitStruct->Alternate));
;;;258    
;;;259            /* Speed mode configuration */
;;;260            if (POSITION_VAL(currentpin) < 0x00000008U)
0000be  fa92f6a2          RBIT     r6,r2
0000c2  fab6f686          CLZ      r6,r6
0000c6  2e08              CMP      r6,#8
0000c8  694e              LDR      r6,[r1,#0x14]
0000ca  d215              BCS      |L2.248|
0000cc  6a07              LDR      r7,[r0,#0x20]
0000ce  fa92f8a2          RBIT     r8,r2
0000d2  fab8f888          CLZ      r8,r8
0000d6  ea4f0888          LSL      r8,r8,#2
0000da  fa04f808          LSL      r8,r4,r8
0000de  fa92f2a2          RBIT     r2,r2
0000e2  fab2f282          CLZ      r2,r2
0000e6  0092              LSLS     r2,r2,#2
0000e8  ea270708          BIC      r7,r7,r8
0000ec  fa06f202          LSL      r2,r6,r2
0000f0  433a              ORRS     r2,r2,r7
0000f2  6202              STR      r2,[r0,#0x20]
;;;261            {
;;;262              LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
0000f4  e015              B        |L2.290|
                  |L2.246|
0000f6  e019              B        |L2.300|
                  |L2.248|
0000f8  6a47              LDR      r7,[r0,#0x24]
0000fa  0a12              LSRS     r2,r2,#8
0000fc  fa92f8a2          RBIT     r8,r2
000100  fab8f888          CLZ      r8,r8
000104  ea4f0888          LSL      r8,r8,#2
000108  fa04f808          LSL      r8,r4,r8
00010c  fa92f2a2          RBIT     r2,r2
000110  fab2f282          CLZ      r2,r2
000114  0092              LSLS     r2,r2,#2
000116  ea270708          BIC      r7,r7,r8
00011a  fa06f202          LSL      r2,r6,r2
00011e  433a              ORRS     r2,r2,r7
000120  6242              STR      r2,[r0,#0x24]
                  |L2.290|
000122  680a              LDR      r2,[r1,#0]            ;232
000124  1c5b              ADDS     r3,r3,#1              ;232
000126  40da              LSRS     r2,r2,r3              ;232
000128  f47faf78          BNE      |L2.28|
                  |L2.300|
;;;263            }
;;;264            else
;;;265            {
;;;266              LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);
;;;267            }
;;;268          }
;;;269        }
;;;270        pinpos++;
;;;271      }
;;;272    
;;;273      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
00012c  684a              LDR      r2,[r1,#4]
00012e  2a01              CMP      r2,#1
000130  bf18              IT       NE
000132  2a02              CMPNE    r2,#2
000134  d109              BNE      |L2.330|
;;;274      {
;;;275        /* Check Output mode parameters */
;;;276        assert_param(IS_LL_GPIO_OUTPUT_TYPE(GPIO_InitStruct->OutputType));
;;;277    
;;;278        /* Output mode configuration*/
;;;279        LL_GPIO_SetPinOutputType(GPIOx, GPIO_InitStruct->Pin, GPIO_InitStruct->OutputType);
000136  680a              LDR      r2,[r1,#0]
000138  68c9              LDR      r1,[r1,#0xc]
00013a  6843              LDR      r3,[r0,#4]
00013c  fb02f101          MUL      r1,r2,r1
000140  ea230302          BIC      r3,r3,r2
000144  ea430101          ORR      r1,r3,r1
000148  6041              STR      r1,[r0,#4]
                  |L2.330|
;;;280    
;;;281      }
;;;282      return (SUCCESS);
;;;283    }
00014a  e8bd01f0          POP      {r4-r8}
00014e  f04f0001          MOV      r0,#1                 ;282
000152  4770              BX       lr
;;;284    
                          ENDP


                          AREA ||i.LL_GPIO_StructInit||, CODE, READONLY, ALIGN=1

                  LL_GPIO_StructInit PROC
;;;291    
;;;292    void LL_GPIO_StructInit(LL_GPIO_InitTypeDef *GPIO_InitStruct)
000000  f64f71ff          MOV      r1,#0xffff
;;;293    {
;;;294      /* Reset GPIO init structure parameters values */
;;;295      GPIO_InitStruct->Pin        = LL_GPIO_PIN_ALL;
;;;296      GPIO_InitStruct->Mode       = LL_GPIO_MODE_ANALOG;
000004  6001              STR      r1,[r0,#0]
000006  2103              MOVS     r1,#3
;;;297      GPIO_InitStruct->Speed      = LL_GPIO_SPEED_FREQ_LOW;
000008  6041              STR      r1,[r0,#4]
00000a  2100              MOVS     r1,#0
;;;298      GPIO_InitStruct->OutputType = LL_GPIO_OUTPUT_PUSHPULL;
00000c  6081              STR      r1,[r0,#8]
;;;299      GPIO_InitStruct->Pull       = LL_GPIO_PULL_NO;
00000e  60c1              STR      r1,[r0,#0xc]
;;;300      GPIO_InitStruct->Alternate  = LL_GPIO_AF_0;
000010  6101              STR      r1,[r0,#0x10]
000012  6141              STR      r1,[r0,#0x14]
;;;301    }
000014  4770              BX       lr
;;;302    
                          ENDP


;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_gpio_c_4040a040____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f4xx_ll_gpio_c_4040a040____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_gpio_c_4040a040____REVSH|
#line 402
|__asm___19_stm32f4xx_ll_gpio_c_4040a040____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_ll_gpio_c_4040a040____RRX|
#line 587
|__asm___19_stm32f4xx_ll_gpio_c_4040a040____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
